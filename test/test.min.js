test.js:21: WARNING - Keywords and reserved words are not allowed as unquoted property names in older versions of JavaScript. If you are targeting newer versions of JavaScript, set the appropriate language_in option.
  assert.throws(function() {
         ^

test.js:25: WARNING - Keywords and reserved words are not allowed as unquoted property names in older versions of JavaScript. If you are targeting newer versions of JavaScript, set the appropriate language_in option.
  assert.throws(function() {
         ^

test.js:29: WARNING - Keywords and reserved words are not allowed as unquoted property names in older versions of JavaScript. If you are targeting newer versions of JavaScript, set the appropriate language_in option.
  assert.throws(function() {
         ^

test.js:33: WARNING - Keywords and reserved words are not allowed as unquoted property names in older versions of JavaScript. If you are targeting newer versions of JavaScript, set the appropriate language_in option.
  assert.throws(function() {
         ^

0 error(s), 4 warning(s)
QUnit.test("Throws",function(a){a["throws"](function(){return $("#t-empty").lst2cols()},"Zero item throws an error");a["throws"](function(){return $("#t-one").lst2cols()},"Only 1 item throws an error");a["throws"](function(){return $("#t-1").lst2cols({colNum:1})},"Zero or one column throws an error");a["throws"](function(){return $("#t-1").lst2cols({method:"abc"})},"Wrong method throws an error")});
QUnit.test("Classes",function(a){a.ok($("#t-1").lst2cols().hasClass("col-block"),"ul must have default class: col-block");a.ok($("#t-2").lst2cols({colBlockClass:"test"}).hasClass("test"),"ul must receive class: test passed as option");a.ok($("#t-3").lst2cols().children("li").hasClass("col"),"tb method li first descendant must have default class: col");a.ok($("#t-4").lst2cols({colClass:"test"}).children("li").hasClass("test"),"tb method li first descendant must receive class: test passed as option");
a.ok($("#t-5").lst2cols({method:"lr"}).children("li").hasClass("col"),"lr method li first descendant must have default class: col");a.ok($("#t-6").lst2cols({method:"lr",colClass:"test"}).children("li").hasClass("test"),"lr method li first descendant must receive class: test passed as option")});
QUnit.test("Column count",function(a){var b={colNum:3,method:"tb"};a.equal($("#t-1").lst2cols().children("li").length,2,"tb method default to 2 columns");a.equal($("#t-2").lst2cols(b).children("li").length,3,"tb method set to 3 columns");b.colNum=10;a.equal($("#t-3").lst2cols(b).children("li").length,8,"tb method set to 10 columns too many should create 8 (1 item per column)");b.method="lr";a.equal($("#t-4").lst2cols({method:"lr"}).children("li").length,2,"lr method default to 2 columns");b.colNum=
3;a.equal($("#t-5").lst2cols(b).children("li").length,3,"lr method set to 3 columns");b.colNum=10;a.equal($("#t-6").lst2cols(b).children("li").length,8,"lr method set to 10 columns too many should create 8 (1 item per column)")});
QUnit.test("Item count per column",function(a){var b={colNum:3};a.equal($("#t-1").lst2cols(b).find("li.col-1 ul").children("li").length,3,"tb method 1 of 3 column has 3 items");a.equal($("#t-2").lst2cols(b).find("li.col-2 ul").children("li").length,3,"tb method 2 of 3 column has 3 items");a.equal($("#t-3").lst2cols(b).find("li.col-3 ul").children("li").length,2,"tb method 3 of 3 column has 2 items");a.equal($("#t-4").lst2cols().find("li.col-1 ul").children("li").length,4,"tb method 1 of 2 column has 4 items");
a.equal($("#t-5").lst2cols().find("li.col-2 ul").children("li").length,4,"tb method 2 of 2 column has 4 items");b.method="lr";a.equal($("#t-6").lst2cols(b).find("li.col-1 ul").children("li").length,3,"lr method 1 of 3 column has 3 items");a.equal($("#t-7").lst2cols(b).find("li.col-2 ul").children("li").length,3,"lr method 2 of 3 column has 3 items");a.equal($("#t-8").lst2cols(b).find("li.col-3 ul").children("li").length,2,"lr method 3 of 3 column has 2 items");a.equal($("#t-9").lst2cols({method:"lr"}).find("li.col-1 ul").children("li").length,
4,"lr method 1 of 2 column has 4 items");a.equal($("#t-10").lst2cols({method:"lr"}).find("li.col-2 ul").children("li").length,4,"lr method 2 of 2 column has 4 items")});
QUnit.test("Html for tb",function(a){var b={colNum:8};a.equal($("#t-1").lst2cols(b).children("li").length,8,"created 8 columns");a.equal($("#t-2").lst2cols(b).find("li.col-1 ul").length,0,"8 columns contains no ul markup because single item each");a.ok($("#t-3").lst2cols(b).children("li").hasClass("col"),"first descendant lis thus must have default class: col");a.equal($("#t-4").lst2cols(b).children("li.col-1").html(),"1","and first column html must be 1");b.colNum=4;a.equal($("#t-5").lst2cols(b).children("li").length,
4,"created 4 columns");a.equal($("#t-6").lst2cols(b).find("li.col-1 ul").length,1,"1 of 4 columns contains ul markup because many items in columns");a.equal($("#t-7").lst2cols(b).find("li.col-4 ul").length,1,"4 of 4 columns contains ul markup because many items in columns");a.ok($("#t-8").lst2cols(b).children("li").hasClass("col"),"tb method first descendant li thus must have default class: col");a.equal($("#t-9").lst2cols(b).children("li.col-1").html(),"<ul><li>1</li><li>2</li></ul>","tb method and first column html must be 1")});
